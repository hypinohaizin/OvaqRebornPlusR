package net.shoreline.client.impl.module.exploit;

import net.minecraft.block.Blocks;
import net.minecraft.item.Items;
import net.minecraft.network.packet.c2s.play.PlayerInteractEntityC2SPacket;
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket;
import net.minecraft.network.packet.c2s.play.VehicleMoveC2SPacket;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.Vec3d;
import net.shoreline.client.api.config.Config;
import net.shoreline.client.api.config.setting.BooleanConfig;
import net.shoreline.client.api.config.setting.NumberConfig;
import net.shoreline.client.api.module.ModuleCategory;
import net.shoreline.client.api.module.ToggleModule;
import net.shoreline.client.impl.event.network.PacketEvent;
import net.shoreline.eventbus.annotation.EventListener;

public final class MaceExploitModule extends ToggleModule {
    Config<Boolean> preventFall = register(new BooleanConfig("PreventFallDamage", "", true));
    Config<Boolean> maxPower = register(new BooleanConfig("MaxPower", "", false));
    Config<Integer> fallHeight = register(new NumberConfig<>("FallHeight", "", 22, 1, 170, () -> !maxPower.getValue()));
    //Config<Boolean> skipIfBlocked = register(new BooleanConfig("DisableWhenBlocked", "", true));

    private Vec3d origin;

    public MaceExploitModule() {
        super("MaceExploit", "Makes the Mace powerful when swung. note alues higher than 22 only work on Paper/Spigot", ModuleCategory.EXPLOITS);
    }

    @EventListener
    public void onPacketOutbound(PacketEvent.Outbound event) {
        if (!(event.getPacket() instanceof PlayerInteractEntityC2SPacket)) return;
        if (mc.player == null || mc.player.getMainHandStack().getItem() != Items.MACE) return;
        origin = mc.player.getPos();
        int gap = findGap();
        if (gap <= 0) return;
        int burst = Math.max(1, (int) Math.ceil(gap / 10.0));
        if (mc.player.hasVehicle()) {
            spoofVehicle(gap, burst);
        } else {
            spoofPlayer(gap, burst);
        }
    }

    private void spoofPlayer(int gap, int burst) {
        double topY = mc.player.getY() + (maxPower.getValue() ? gap : Math.min(gap, fallHeight.getValue()));
        for (int i = 0; i < burst - 1; i++) {
            mc.player.networkHandler.sendPacket(new PlayerMoveC2SPacket.OnGroundOnly(false));
        }
        mc.player.networkHandler.sendPacket(new PlayerMoveC2SPacket.PositionAndOnGround(mc.player.getX(), topY, mc.player.getZ(), false));
        double downY = preventFall.getValue() ? origin.y + 0.25 : origin.y;
        mc.player.networkHandler.sendPacket(new PlayerMoveC2SPacket.PositionAndOnGround(origin.x, downY, origin.z, false));
        if (preventFall.getValue()) {
            mc.player.setVelocity(mc.player.getVelocity().x, 0.1, mc.player.getVelocity().z);
            mc.player.fallDistance = 0;
        }
    }

    private void spoofVehicle(int gap, int burst) {
        for (int i = 0; i < burst - 1; i++) {
            mc.player.networkHandler.sendPacket(new VehicleMoveC2SPacket(mc.player.getVehicle()));
        }
        double topY = mc.player.getVehicle().getY() + gap;
        mc.player.getVehicle().setPosition(mc.player.getVehicle().getX(), topY, mc.player.getVehicle().getZ());
        mc.player.networkHandler.sendPacket(new VehicleMoveC2SPacket(mc.player.getVehicle()));
        mc.player.getVehicle().setPosition(origin);
        mc.player.networkHandler.sendPacket(new VehicleMoveC2SPacket(mc.player.getVehicle()));
    }

    private int findGap() {
        BlockPos base = mc.player.getBlockPos();
        int limit = maxPower.getValue() ? 170 : fallHeight.getValue();
        for (int y = base.getY() + limit; y > base.getY(); y--) {
            BlockPos p1 = new BlockPos(base.getX(), y, base.getZ());
            BlockPos p2 = p1.up();
            if (isAiry(p1) && isAiry(p2)) return y - base.getY();
        }
        return 0;
    }

    private boolean isAiry(BlockPos pos) {
        return mc.world.getBlockState(pos).isReplaceable()
                && mc.world.getFluidState(pos).isEmpty()
                && !mc.world.getBlockState(pos).isOf(Blocks.POWDER_SNOW);
    }
}
